from django.http import HttpResponseRedirect, JsonResponse
from django.shortcuts import render
import spotipy
from dotenv import load_dotenv
from .genre import genres
load_dotenv()
import os


class recommendations:

    def getRecommendation(request):
         # Get the access token from the session
        access_token = request.session.get("access_token")

        # Create a Spotipy client using the access token
        sp = spotipy.Spotify(auth=access_token)

        artists = sp.current_user_top_artists(limit=20, offset=0, time_range="medium_term")['items']
        tracks = sp.current_user_top_tracks(limit=20, offset=0, time_range="medium_term")['items']
        genre = genres.getGenres(request, True)

        artist_seed = []
        track_seed = []
        genres_seed = []
        for i in range(0, 5):
            artist_seed.append(artists[i]['id'])
            track_seed.append(tracks[i]['id'])
            genres_seed.append(genre[i][0])

        recommendations = sp.recommendations(market='GB', limit=10, seed_tracks=track_seed)
        
        newTracks = recommendations["tracks"]

         # Create a list of dictionaries representing the top tracks
        tracks = []
        for track in newTracks:
            track_info = {
                "name": track["name"],
                "artist": track["artists"][0]["name"],
                "album": track["album"]["name"],
            }
            tracks.append(track_info)

        user_id = sp.me()['id']


        response = sp.user_playlist_create(name="Recommended Playlist", description="A playlist generated by top songs you've listened to", public=False, user=user_id)

        songs = [track['uri'] for track in newTracks]

        sp.playlist_add_items(playlist_id=response['id'], items=songs)


        return render(request, 'spotify/recommendation.html', {"songs":tracks, "playlist_uri":response['id']})
        
        